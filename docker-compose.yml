version: '3'
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env
  auth:
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: npm run start:dev auth # overrides CMD from dockerfile
  manager:
    build:
      context: ./
      dockerfile: apps/manager/Dockerfile
    env_file:
      - .env
    ports:
      - '8080:8080'
    depends_on:
      - rabbitmq
      - postgres
      - auth
      - redis
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: npm run start:dev manager # overrides CMD from dockerfile
#  presence:
#    build:
#      context: ./
#      dockerfile: ./apps/presence/Dockerfile
#    ports:
#      - '6000:6000'
#    env_file:
#      - .env
#    depends_on:
#      - rabbitmq
#      - postgres
#      - redis
#    volumes:
#      - .:/usr/src/app # any change to base folder should be reflected
#      - /usr/src/app/node_modules
#    command: npm run start:dev presence # overrides CMD from dockerfile
#  chat:
#    build:
#      context: ./
#      dockerfile: ./apps/chat/Dockerfile
#    ports:
#      - '7000:7000'
#    env_file:
#      - .env
#    depends_on:
#      - rabbitmq
#      - postgres
#      - redis
#      - presence
#    volumes:
#      - .:/usr/src/app # any change to base folder should be reflected
#      - /usr/src/app/node_modules
#    command: npm run start:dev chat # overrides CMD from dockerfile
  api:
    build:
      context: ./
      dockerfile: ./apps/api/Dockerfile
    ports:
      - '4000:5000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - auth
#      - presence
      - manager
    volumes:
      - .:/usr/src/app # any change to base folder should be reflected
      - /usr/src/app/node_modules
    command: npm run start:dev api
  postgres:
    image: postgres
    container_name: postgres
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - data:/var/lib/postgresql/data
#  postgres-replication:
#    image: postgres
#    depends_on:
#     - postgres
#    container_name: postgres-secondary
#    env_file:
#      - .env
##    ports:
##      - '5433:5432'
#    environment:
#      POSTGRES_MASTER_SERVICE: postgresql
#      POSTGRES_REPLICATION_MODE: true
#      POSTGRES_REPLICATE_FROM: postgresql
#      POSTGRES_MASTER_HOST: postgresql
#      POSTGRES_REPLICATION_USER: replication_user
#      POSTGRES_REPLICATION_PASSWORD: replication_password
#    volumes:
#      - data-replication:/var/lib/postgresql/data
  postgres_admin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    env_file:
      - .env
    ports:
      - '15432:80'
  redis:
   image: redis
   command: /bin/sh -c "redis-server --requirepass $$REDIS_PASS"
   env_file:
     - .env
   ports:
    - '6379:6379'
   volumes:
     - ./redis/data:/data
volumes:
  data: